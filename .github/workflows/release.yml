name: Release

on:
  push:
    tags:
      - "v*"

permissions: {}

jobs:
  release:
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: setup node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: lts/*

      - name: update npm (oidc)
        run: npm install -g npm@latest

      - name: generate changelog
        run: pnpx changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - name: build
        run: pnpm build

      - name: detect tag
        id: tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)

          # if the latest tag is a pre-release, beta or whatever. We need to publish using the "next" tag
          if [[ "$LATEST_TAG" == *-* ]]; then
            echo "should_use_next=true" >> $GITHUB_OUTPUT
          else
            echo "should_use_next=false" >> $GITHUB_OUTPUT
          fi

      - name: publish to npm
        if: steps.tag.outputs.should_use_next == 'true'
        run: npm publish --tag next --access public --no-git-checks
        env:
          NPM_CONFIG_PROVENANCE: true

      - name: publish to npm
        if: steps.tag.outputs.should_use_next == 'false'
        run: npm publish --access public --no-git-checks
        env:
          NPM_CONFIG_PROVENANCE: true

      - name: publish to jsr
        run: npx jsr publish --allow-dirty

      - name: print dirty files
        run: git status --porcelain
