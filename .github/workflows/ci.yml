name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

permissions: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: setup node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: lts/*
          cache: pnpm

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - name: build
        run: pnpm build

      - name: lint
        run: pnpm lint

      - name: typecheck
        run: pnpm typecheck

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [20, lts/*]
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
      fail-fast: false

    steps:
      - name: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: setup node v${{ matrix.node }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - name: build
        run: pnpm build

      - name: test (unit)
        run: pnpm test --project unit

      - name: install chromium through playwright
        if: matrix.os == 'ubuntu-latest'
        run: pnpm exec playwright install chromium

      - name: test (browser)
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run pnpm test --project browser

  deno:
    name: test-deno
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        deno-version: [2.2.x, 2.3.x, 2.4.x]

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: setup deno ${{ matrix.deno-version }}
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: install dependencies
        run: deno install

      - name: run deno test
        run: deno test --config=deno.json --allow-env

  bun:
    name: test-bun
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Bun Setup doesn't work with the wildcard version atm,
        # so hardcoding them for now.
        bun-version: [1.0.36, 1.1.45, 1.2.18]

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: setup bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2.0.2
        with:
          bun-version: ${{ matrix.bun-version }}
          no-cache: true

      - name: install dependencies
        run: bun install

      - name: run bun test
        run: bun test test-bun/
